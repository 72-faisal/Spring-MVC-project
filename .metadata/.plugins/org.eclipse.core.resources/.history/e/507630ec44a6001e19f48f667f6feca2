package com.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.view.RedirectView;

import com.dao.LoanDao;
import com.model.Loan;
import com.model.User;

@Controller
public class LoanController {

	@Autowired
	LoanDao Dao;

	@GetMapping("/LoanApplyOnline")
	public String LoanApplyOnline(HttpSession session) {
		User user = (User) session.getAttribute("user");
		if (user != null) {
			return "LoanApplyOnline";
		} else {
			// Handle the case where the user is not in the session (e.g., redirect to
			// login)
			return "redirect:/UserLogin";
		}

	}
	@PostMapping("/LoanApply")
		public String LoanApply(HttpSession session) {
			User user= (User) session.getAttribute("user");
			if(user!=null) {
				return "UserFormForLoanOnline";
			}else {
				return "UserLogin";
			}
		}
	
	@GetMapping("/UserForForLoanOnline")
	public String UserFormForLoanOnline(Model model) {
		 model.addAttribute("loan", new Loan());
		return "UserFormForLoanOnline";

	}
	@GetMapping("/UserForForLoanOnline2")
	public String UserFormForLoanOnline2() {
		 model.addAttribute("loan", new Loan());
		return "UserFormForLoanOnline2";

	}
	
	@GetMapping("/UserForForLoanOnline3")
	public String UserFormForLoanOnline3() {
		 model.addAttribute("loan", new Loan());
		return "UserFormForLoanOnline3";

	}
	
	@PostMapping("/UploadDocuments")
	public String UploadDocuments(@ModelAttribute Loan cust, HttpServletRequest req ,@RequestParam("currentStep") int currentStep,
            Model model) {
		Dao.getDocuments(cust);		 
		    if (currentStep == 3) {
		        // If it's the final step, save data to the database
		    	Dao.getDocuments(cust);
		        // Clear the form data
		        model.addAttribute("loan", new Loan());
		        return "redirect:/LoanApplyOnline";
		    }

		    // Redirect to the next step
		    return "redirect:/UserForForLoanOnline" + (currentStep + 1);
		}
	

	
	
	
	
	
	
	
	
	
	
	@GetMapping("/LoanApprovedProject")
	public String LoanApprovedProject(HttpSession session) {
		User user = (User) session.getAttribute("user");
		if (user != null) {
			return "LoanApprovedProject";
		} else {
			// Handle the case where the user is not in the session (e.g., redirect to
			// login)
			return "redirect:/UserLogin";
		}
	}
	
	@PostMapping("/LoanApproved")
	public String LoanApproved(HttpSession session) {
		User user= (User) session.getAttribute("user");
		if(user!=null) {
			return "ApprovedProjectList";
		}else {
			return "UserLogin";
		}
	}
	@GetMapping("/project1")
	public String project1() {
		return "project1";
	}
	
	
	
	
	
	
	
	@GetMapping("/LoanCalculator")
	public String LoanCalculator(HttpSession session) {
		User user = (User) session.getAttribute("user");
		if (user != null) {
			return "LoanCalculator";
		} else {
			// Handle the case where the user is not in the session (e.g., redirect to
			// login)
			return "redirect:/UserLogin";
		}
	}
	
}
